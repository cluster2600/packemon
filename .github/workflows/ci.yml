name: CI/CD Pipeline
# CI/CDパイプライン

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    # テスト
    runs-on: ubuntu-latest
    # 最新のUbuntuで実行
    
    steps:
    - name: Set up Go
      # Goのセットアップ
      uses: actions/setup-go@v2
      with:
        go-version: 1.20
    
    - name: Check out code
      # コードのチェックアウト
      uses: actions/checkout@v2
    
    - name: Install dependencies
      # 依存関係のインストール
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcap-dev
    
    - name: Get dependencies
      # 依存関係の取得
      run: go mod download
    
    - name: Run tests
      # テストの実行
      run: go test -v ./...
    
    - name: Run integration tests
      # 統合テストの実行
      run: sudo go test -v -tags=integration ./...
    
    - name: Run linter
      # リンターの実行
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest

  build:
    name: Build
    # ビルド
    runs-on: ubuntu-latest
    # 最新のUbuntuで実行
    needs: test
    # テストが成功した後に実行
    
    steps:
    - name: Set up Go
      # Goのセットアップ
      uses: actions/setup-go@v2
      with:
        go-version: 1.20
    
    - name: Check out code
      # コードのチェックアウト
      uses: actions/checkout@v2
    
    - name: Install dependencies
      # 依存関係のインストール
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcap-dev
    
    - name: Build
      # ビルド
      run: |
        go build -v ./cmd/packemon
        go build -v ./cmd/packemon-api
    
    - name: Upload artifacts
      # 成果物のアップロード
      uses: actions/upload-artifact@v2
      with:
        name: packemon-binaries
        path: |
          packemon
          packemon-api

  docker:
    name: Docker
    # Docker
    runs-on: ubuntu-latest
    # 最新のUbuntuで実行
    needs: build
    # ビルドが成功した後に実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # mainブランチへのプッシュの場合のみ実行
    
    steps:
    - name: Check out code
      # コードのチェックアウト
      uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      # Docker Buildxのセットアップ
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      # DockerHubへのログイン
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      # ビルドとプッシュ
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          packemon/packemon:latest
          packemon/packemon:${{ github.sha }}

  release:
    name: Release
    # リリース
    runs-on: ubuntu-latest
    # 最新のUbuntuで実行
    needs: docker
    # Dockerが成功した後に実行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v')
    # タグ付きのmainブランチへのプッシュの場合のみ実行
    
    steps:
    - name: Check out code
      # コードのチェックアウト
      uses: actions/checkout@v2
    
    - name: Set up Go
      # Goのセットアップ
      uses: actions/setup-go@v2
      with:
        go-version: 1.20
    
    - name: Install dependencies
      # 依存関係のインストール
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcap-dev
    
    - name: Run GoReleaser
      # GoReleaserの実行
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
